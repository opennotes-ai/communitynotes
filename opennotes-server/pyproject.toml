[project]
name = "opennotes-server"
version = "0.1.0"
description = "OpenNotes backend server - Core business logic and API"
authors = [{name = "OpenNotes Team", email = "team@opennotes.ai"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.9",
    "greenlet>=3.0.0",
    "redis[hiredis]>=5.0.1",
    "nats-py>=2.6.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "httpx>=0.25.2",
    "tenacity>=8.2.3",
    "python-dateutil>=2.8.2",
]

[project.optional-dependencies]
scoring = [
    "numpy==1.26.4",
    "pandas==2.2.2",
    "torch==2.1.2",
    "scipy==1.11.4",
    "scikit-learn>=1.3.0",
    "pyarrow>=15.0.0",
    "wandb==0.18.7",
]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.6",
    "mypy>=1.7.1",
    "httpx>=0.25.2",
    "faker>=20.1.0",
    "types-passlib>=1.7.7",
    "types-python-jose>=3.3.4",
    "types-redis>=4.6.0",
]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",
    "F",
    "W",
    "I",
    "N",
    "UP",
    "B",
    "A",
    "C4",
    "DTZ",
    "T10",
    "ISC",
    "ICN",
    "PIE",
    "PT",
    "RET",
    "SIM",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "RUF",
]
ignore = [
    "E501",
    "PLR0913",
    "PLR2004",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/**/*.py" = ["PLR2004", "S101"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = [
    "passlib.*",
    "jose.*",
    "nats.*",
    "scoring.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
